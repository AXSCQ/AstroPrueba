---
import Layout from "../layouts/Layout.astro";
import DawPanel from "../components/DawPanel.astro";
import { Image } from 'astro:assets';
import perfilImage from "../assets/images/perfil.jpg";
import bajistaImage from "../assets/images/bajista.jpg";
import laptopImage from "../assets/images/laptop.jpg";
import ProjectModal from "../components/ProjectModal.astro";
import Contact from "../components/Contact.astro";
import ProfileModal from "../components/ProfileModal.astro";
// Audio visualizer optimizado con lazy loading inteligente
import MultiTrackAudioVisualizer from "../components/MultiTrackAudioVisualizer.astro";

// Definición de los proyectos
const projects = [
  {
    title: "Bot WhatsApp (Baileys)",
    shortDescription: "Chatbot funcional con múltiples opciones",
    description: "Desarrollo de un chatbot para WhatsApp utilizando la librería Baileys. Este bot permite automatizar respuestas, gestionar grupos, enviar y recibir archivos multimedia, y ejecutar comandos personalizados.",
    image: laptopImage,
    features: [
      "Respuestas automáticas configurables", 
      "Gestión de grupos y participantes",
      "Envío y recepción de archivos multimedia",
      "Sistema de comandos personalizados"
    ],
    technologies: ["Node.js", "JavaScript", "Baileys", "Express"]
  },
  {
    title: "En desarrollo",
    shortDescription: "Proyecto actualmente en fase de desarrollo",
    description: "Este proyecto está actualmente en fase de desarrollo y no puede ser compartido públicamente todavía. Pronto estará disponible para ser mostrado.",
    image: laptopImage,
    features: [
      "Características por definir",
      "Tecnologías en implementación",
      "Diseño en proceso"
    ],
    technologies: ["En progreso"]
  },
  {
    title: "Proyecto privado",
    shortDescription: "Proyecto desarrollado para cliente privado",
    description: "Este proyecto fue desarrollado para un cliente privado y está bajo acuerdo de confidencialidad, por lo que no puede ser compartido públicamente.",
    image: laptopImage,
    features: [
      "Características confidenciales",
      "Desarrollo a medida",
      "Implementación exitosa"
    ],
    technologies: ["Confidencial"]
  },
  {
    title: "Próximamente",
    shortDescription: "Nuevo proyecto en planificación",
    description: "Próximo proyecto en fase de planificación y diseño. Estoy trabajando en conceptos innovadores que pronto se materializarán en esta sección.",
    image: laptopImage,
    features: [
      "Planificación en curso",
      "Investigación de tecnologías",
      "Diseño preliminar"
    ],
    technologies: ["Por definir"]
  }
];
---

<Layout title="Axel Simon Condori - Portfolio">
  <div class="min-h-screen bg-cyber-950 p-2 sm:p-4 md:p-8 overflow-x-hidden">
    <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-3 md:gap-4 max-w-7xl mx-auto px-1 sm:px-2 md:px-4">
      <!-- Profile Panel -->
      <DawPanel title="PROFILE" variant="default" class="lg:col-span-2" data-track="vocals">
        <div class="flex flex-col sm:flex-row items-center sm:items-start gap-4 sm:gap-6 w-full">
          <Image
            src={perfilImage}
            alt="Axel Simon Condori"
            class="w-20 h-20 xs:w-24 xs:h-24 sm:w-32 sm:h-32 rounded-xl object-cover border border-neon-blue/20 animate-glow"
            width={128}
            height={128}
            loading="eager"
            decoding="async"
            format="webp"
            quality={85}
          />
          <div class="text-center sm:text-left">
            <h1 class="text-xl sm:text-2xl md:text-3xl font-bold text-white mb-2 break-words">
              Axel Simon <span class="text-neon-blue">Condori Quispe</span>
            </h1>
            <p class="text-white/60">Desarrollador Full Stack & Músico</p>
            
            <!-- Botón para abrir el modal -->
            <button 
              id="profileModalBtn" 
              class="mt-3 px-3 xs:px-4 py-1.5 xs:py-2 bg-cyber-800/70 border border-neon-blue/20 rounded-lg text-neon-blue hover:bg-cyber-700 hover:border-neon-blue/40 transition-all flex items-center gap-1 xs:gap-2 text-xs xs:text-sm mx-auto sm:mx-0"
            >
              <svg xmlns="http://www.w3.org/2000/svg" class="h-3 w-3 xs:h-4 xs:w-4" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z" />
              </svg>
              Ver biografía completa
            </button>
          </div>
        </div>
      </DawPanel>
    

      <!-- Music Projects -->
      <DawPanel title="MUSIC PROJECTS" variant="music" data-track="other">
        <div class="relative">
          <Image
            src={bajistaImage}
            alt="Music Projects"
            class="w-full h-36 sm:h-40 md:h-48 object-cover rounded-lg"
            width={300}
            height={200}
            loading="lazy"
            decoding="async"
            format="webp"
            quality={80}
          />
          <div class="mt-4 space-y-2">
            {
              ['Bajo', 'Creatividad', 'Pasion'].map((skill, index) => (
                <div class="flex items-center gap-2" data-key={index}>
                  <div class="flex-1 h-1 bg-cyber-700 rounded-full overflow-hidden">
                    <div class="h-full bg-neon-purple w-4/5 animate-pulse-slow"></div>
                  </div>
                  <span class="text-xs text-white/60">{skill}</span>
                </div>
              ))
            }
          </div>
        </div>
      </DawPanel>

      <!-- Code Editor Panel -->
      <DawPanel title="CODE EDITOR" variant="code" class="lg:col-span-2" data-track="other">
        <div class="font-mono text-xs sm:text-sm overflow-x-auto max-w-full">
          <pre class="text-white/80 p-2 overflow-x-auto text-[10px] xs:text-xs sm:text-sm">
            <code>{`class Developer {
  name = "Axel Simon Condori Quispe"
  level = "Intermedio" // 2 años de experiencia profesional
  current_focus = "Full Stack Development"
  
  skills = {
    frontend: ["React", "JavaScript", "HTML5", "CSS3"],
    backend: ["Node.js", "PHP", "Python", "FastAPI"],
    databases: ["PostgreSQL", "MySQL"],
    tools: ["Git", "Docker"]
  }
  
  learning = ["TypeScript", "Next.js", "AWS", "CI/CD"]
  passions = ["Programación", "Música", "Aprendizaje continuo"]
  
  toString() {
    return "Desarrollador apasionado con 2 años de experiencia profesional"
  }
}`}</code>
          </pre>
        </div>
      </DawPanel>

      <!-- Projects Grid -->
      <DawPanel title="PROJECTS" variant="default" data-track="drums">
        <div class="grid grid-cols-1 xs:grid-cols-2 gap-2">
          {
            projects.map((project, i) => (
              <div 
                class="aspect-square bg-cyber-800 rounded-lg p-1 xs:p-2 hover:bg-cyber-700 transition-all cursor-pointer border border-neon-blue/10 hover:border-neon-blue/30 group"
                onclick={`document.getElementById('project-${i}').showModal()`}
              >
                <div class="w-full h-full rounded bg-cyber-700/50 group-hover:bg-cyber-600/50 transition-all relative overflow-hidden">
                  {project.image && (
                    <Image
                      src={project.image}
                      alt={project.title}
                      class="w-full h-full object-cover opacity-80 group-hover:opacity-100 transition-all"
                      width={300}
                      height={300}
                      loading="lazy"
                    />
                  )}
                  <div class="absolute inset-0 bg-gradient-to-t from-cyber-900/80 to-transparent p-2 xs:p-3 sm:p-4 flex flex-col justify-end">
                    <h3 class="text-neon-blue font-medium text-sm xs:text-base">{project.title}</h3>
                    <p class="text-xs xs:text-sm text-white/60">{project.shortDescription}</p>
                    <button 
                      class="mt-1 xs:mt-2 px-2 xs:px-3 py-1 bg-neon-blue/70 text-white text-[10px] xs:text-xs rounded-lg hover:bg-neon-blue shadow-md shadow-neon-blue/20 transition-all"
                      style="filter: drop-shadow(0 0 3px rgba(0, 200, 255, 0.5));"
                    >
                      Ver detalles
                    </button>
                  </div>
                </div>
              </div>

              <ProjectModal id={`project-${i}`}>
                <h2 slot="title">{project.title}</h2>
                <div class="prose prose-invert max-w-none">
                  <Image
                    src={project.image}
                    alt={project.title}
                    class="w-full h-48 sm:h-56 md:h-64 object-cover rounded-lg mb-4"
                    width={600}
                    height={300}
                    loading="lazy"
                    decoding="async"
                    format="webp"
                    quality={75}
                  />
                  <p class="text-white text-base leading-relaxed" style="text-shadow: 0 0 2px rgba(255, 255, 255, 0.2);">{project.description}</p>
                  <h3 class="text-neon-blue font-semibold mt-6 mb-3" style="text-shadow: 0 0 4px rgba(0, 200, 255, 0.4);">Características principales:</h3>
                  <ul class="space-y-2">
                    {project.features.map(feature => (
                      <li class="text-white flex items-start">
                        <span class="text-neon-blue mr-2">•</span>
                        <span>{feature}</span>
                      </li>
                    ))}
                  </ul>
                </div>
                <div slot="technologies" class="flex flex-wrap gap-1 sm:gap-2 mb-4">
                  {project.technologies.map(tech => (
                    <span class="px-2 py-1 bg-cyber-700 text-neon-blue text-xs sm:text-sm rounded-full shadow-sm shadow-neon-blue/30">
                      {tech}
                    </span>
                  ))}
                </div>
                {i === 0 && (
                  <div class="mt-4 flex justify-center">
                    <a 
                      href="https://github.com/AXSCQ/Bot-promocional" 
                      target="_blank" 
                      rel="noopener noreferrer"
                      class="px-4 sm:px-6 py-2 sm:py-3 text-sm sm:text-base bg-gradient-to-r from-neon-blue to-neon-purple text-white font-medium rounded-lg hover:from-neon-purple hover:to-neon-blue transition-all duration-300 shadow-lg shadow-neon-blue/30 flex items-center gap-2 transform hover:scale-105"
                      style="filter: drop-shadow(0 0 8px rgba(0, 200, 255, 0.7));"
                    >
                      <svg 
                        xmlns="http://www.w3.org/2000/svg" 
                        class="h-4 w-4 sm:h-5 sm:w-5" 
                        viewBox="0 0 24 24" 
                        fill="currentColor"
                      >
                        <path d="M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z"/>
                      </svg>
                      Ver código en GitHub
                    </a>
                  </div>
                )}
              </ProjectModal>
            ))
          }
        </div>
      </DawPanel>

      <!-- Contact Panel -->
      <DawPanel title="CONTACT" variant="contact" class="col-span-1 md:col-span-2 lg:col-span-3" data-track="bass">
        <button 
          id="contactModalBtn"
          class="w-full py-2 sm:py-3 bg-cyber-800/80 rounded-lg text-center hover:bg-cyber-700 transition-all text-neon-blue group text-sm sm:text-base"
        >
          <span class="text-neon-pink group-hover:text-neon-purple transition-colors mr-2">></span> 
          Abrir formulario de contacto completo
        </button>
      </DawPanel>
    </div>
  </div>
  
  <!-- Añade el modal de perfil -->
  <ProfileModal 
    id="profile-modal" 
    name="Axel Simon Condori Quispe" 
    title="Desarrollador Full Stack & Músico"
    photoSrc={perfilImage}
    cvPath="/files/currículum vitae.pdf"
  />
  
  <!-- Modal de contacto completo que se mostrará al hacer clic en el botón -->
  <dialog id="contactModal" class="fixed inset-0 bg-cyber-950/80 backdrop-blur-md z-50 w-full h-full p-0 m-0 overflow-y-auto">
    <div class="container mx-auto h-full overflow-auto py-6 sm:py-8 md:py-10 px-2 sm:px-4">
      <div class="flex justify-end mb-4 px-4">
        <button id="closeContactBtn" class="text-white hover:text-neon-blue p-1 sm:p-2 rounded-full bg-cyber-800/70 shadow-lg shadow-white/10 hover:shadow-white/30">
          <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6 sm:h-8 sm:w-8" fill="none" viewBox="0 0 24 24" stroke="currentColor" style="filter: drop-shadow(0 0 2px rgba(255, 255, 255, 0.5));">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
          </svg>
        </button>
      </div>
      
      <Contact />
    </div>
  </dialog>

  <script>
    // Configurar todos los modales
    document.addEventListener('DOMContentLoaded', () => {
      // Modal de contacto
      const contactModalBtn = document.getElementById('contactModalBtn');
      const contactModal = document.getElementById('contactModal');
      const closeContactBtn = document.getElementById('closeContactBtn');
      
      if (contactModalBtn && contactModal instanceof HTMLDialogElement && closeContactBtn) {
        contactModalBtn.addEventListener('click', () => {
          contactModal.showModal();
          document.body.classList.add('overflow-hidden');
        });
        
        closeContactBtn.addEventListener('click', () => {
          contactModal.close();
          document.body.classList.remove('overflow-hidden');
        });
        
        // Cerrar al hacer clic fuera del contenido
        contactModal.addEventListener('click', (e) => {
          const dialogDimensions = contactModal.getBoundingClientRect();
          if (
            e.clientX < dialogDimensions.left ||
            e.clientX > dialogDimensions.right ||
            e.clientY < dialogDimensions.top ||
            e.clientY > dialogDimensions.bottom
          ) {
            contactModal.close();
            document.body.classList.remove('overflow-hidden');
          }
        });
      }
      
      // Modal de perfil
      const profileModalBtn = document.getElementById('profileModalBtn');
      const profileModal = document.getElementById('profile-modal');
      
      if (profileModalBtn && profileModal instanceof HTMLDialogElement) {
        profileModalBtn.addEventListener('click', () => {
          profileModal.showModal();
          document.body.classList.add('overflow-hidden');
        });
      }
    });
  </script>
  
  <!-- Visualizador de audio multitrack con carga diferida -->
  <div id="visualizer-container" class="hidden">
    <MultiTrackAudioVisualizer />
  </div>
  
  <script>
    // Carga diferida del visualizador de audio
    document.addEventListener('DOMContentLoaded', () => {
      // Esperar a que la página esté completamente cargada
      setTimeout(() => {
        const container = document.getElementById('visualizer-container');
        if (container) {
          container.classList.remove('hidden');
          // Disparar un evento personalizado para notificar que el visualizador está listo
          document.dispatchEvent(new CustomEvent('visualizer-loaded'));
        }
      }, 1000); // Retrasar 1 segundo para priorizar la carga inicial de la página
    });
  </script>
</Layout>
